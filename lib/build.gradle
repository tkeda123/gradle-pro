/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.gradle.sample:library:1.1'
    implementation 'org.gradle.sample:library:1.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}




publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId = 'tatsuya.gradle'
            artifactId = 'library'
            version = '1.1'
        }
    }
    repositories {
        mavenCentral()
        maven {
            // NexusのURLを指定
            url = 'http://localhost:8081/repository/maven-releases/'
            // Nexusへの認証情報を設定
            credentials {
                username = 'admin'
                password = 'password'
            }
        allowInsecureProtocol = true
        }
    }
}



repositories {
    maven {
        url 'http://localhost:8081/repository/maven-releases/'
        credentials {
            username = 'admin'
            password = 'password'
        }
        allowInsecureProtocol = true
    }
}


